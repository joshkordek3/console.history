'use strict'
if (typeof console.history !== 'undefined') {
  throw new Error('Only one instance of console-history.js can run at a time.')
}
console._log = console.log;
console._info = console.info;
console._warn = console.warn;
console._error = console.error;
console._debug = console.debug;
console.history = [];
console.log = function () {
  return console._intercept('log', arguments)
}
console.info = function () {
  return console._intercept('info', arguments)
}
console.warn = function () {
  return console._intercept('warn', arguments)
}
console.error = function () {
  return console._intercept('error', arguments)
}
console.debug = function () {
  return console._intercept('debug', arguments)
}
console._intercept = function (type, args) {
  console._collect(type, args)
}
console._collect = function (type, args) {
  let time = new Date().toUTCString();
  if (!type) type = 'log';
  if (!args || args.length === 0) return;
  console['_' + type].apply(console, args);
  let stack = false;
  try {
    throw Error('');
  } catch (error) {
    let stackParts = error.stack.split('\n');
    stack = [];
    for (var i = 0; i < stackParts.length; i++) {
      if (stackParts[i].indexOf('console-history.js') > -1 || stackParts[i].indexOf('console-history.min.js') > -1 || stackParts[i] === 'Error') continue;
      stack.push(stackParts[i].trim());
    }
  }
  console.history.push({ type: type, timestamp: time, arguments: args, stack: stack })
}
/*
"use strict";
if ("undefined" != typeof console.history) throw new Error("Only one instance of console-history.js can run at a time.");
console._log = console.log,
console._info = console.info,
console._warn = console.warn,
console._error = console.error,
console._debug = console.debug,
console.history = [],
console.log = function () {
  return console._intercept("log", arguments);
},
console.info = function () {
  return console._intercept("info", arguments);
},
console.warn = function () {
  return console._intercept("warn", arguments);
}, 
console.error = function () {
  return console._intercept("error", arguments);
}, 
console.debug = function () {
  return console._intercept("debug", arguments);
}, 
console._intercept = function (a,b) {
  console._collect(a, b);
}, 
console._collect = function (a,b) {
  let c = (new Date).toUTCString();
  if (a || (a = "log"), b && 0!==b.length) {
    console["_" + a].apply(console,b);
    let d = !1;
    try {
      throw Error("")
    } catch (a) {
      let e = a.stack.split("\n");
      d = [];
      for (let f = 0; f < e.length; f++) e[f].indexOf("console-history.js") > -1 || e[f].indexOf("console-history.min.js") > -1 || "Error" === e[f] || d.push(e[f].trim())
    }
    console.history.push({type: a, timestamp: c, arguments: b, stack: d});
  }
};
*/
